Programação Funcional

-É um paradigma de Programação como a OO
-Uma maneira de resolver problemas

Funções

-Pequenas tarefas dentro de uma função
-Abstrair um problema e isolar ele dentro da função 
-Não Modificar dados fora dela
-Pequenas e bem específicadas no que fazem

Caracteristicas principais da função

-Um dado(ou mais) entra em uma função e um novo dado sai dessa função
-Não altera dados
-Não guarda estados stateless

Linguagens funcionais

-JavaScript(multiparadigma)
-PHP(multiparadigma)
-Elixir
-Haskell

Poontos positivos

-Fácil manutenção
-Fácil uso de testes
    +Funções isoladas e consistentes
-Códigos mais confiáveis

Programação Imperativa

-O código é pensado e gerado em sequência
-O código é pensado como um passo-a-passo, como uma receita da bolo
-Uma coisa depende da outra
-O estado de um dado é alterado constantemente causando mutações nas variáveis
-Orientação a Objetos é um tipo de paradigma imperativo

Programação declarativa

-O código é gerado para fazer algo, não importa como
-O que fazer e não como fazer
-Não há a necessidade de um passo-a-passo no código
-Programação Funcional é um tipo de paradigma declarativo

Imutabilidade

-Uma variável não pode variar
-Se você precisar mudar uma variável, você não muda, você cria um nova

Stateless

-Não guarda estado
-A função só conhece dados entregues a ela
-A resposta não poderá variar

Funções Independentes

-Deverá ter ao menos 1 argumento
-Trabalha somente com dados passados como argumento
-Deverá retornar algo
-Nada que acontecer lá dentro afeta o mundo externo
    +dados imutáveis
    +não guarda estado
-Não faremos uso de loops (for, while), mas se houver necessidade de tal, usaremos recursão(a funcão que chama ela mesma)

Funções puras

-Não deverá depender de nenhum dado externo a não ser o que foi passado como argumento
-Não deverá sofrer nenhuma interferência do mundo externo a ela
-Se o argumento é o mesmo, o retorno não poderá ser diferente quando a função for chamada novamente
-Não terá nenhum efeito colateral no seu código
    +Não irá modificar nenhum dado
    +Não irá guardar nenhum estado


First-class function

-Podem estar em qualquer lugar, inclusive, como parâmetro de outras funções
-A funcão poderá ser entendida como uma variável

Higher-order function

-Funções que recebem funções como argumentos
-Funções que poderão retornar outras funções

Composição de Funções

-Um encadeamento de funções
-Uma função que retorna um dade e vai para outra funcão, que retorna um dado e vai para outra função, que retorna...